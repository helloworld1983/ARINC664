// Copyright 2005-2011 Virtutech AB
dml 1.2;

device afdxES;

parameter desc = "afdx End System";
parameter documentation = "afdx End System";
parameter byte_order = "big-endian"; 
 
import "utility.dml";
import "io-memory.dml";
import "simics/devs/memory-space.dml";
import "packet-frame.dml";
import "config-tables.dml";
import "vl.dml";
import "constant.dml";
import "unpacket-frame.dml";
import "afdx-exchange.dml";
import "pci-action.dml";
import "pci-register.dml";
import "change-endian.dml";
import "tomiddleware.dml";
import "rm-handler.dml";
import "ui-data-exchange.dml";

attribute middleware_mode "Used to switch middleware mode" { 
    parameter documentation = "Used to switch work mode (to664middleware/to429middleware)";
    parameter allocate_type = "uint32";
}

attribute is_cfg_done "If true, don't change cfg table index and write cfg table again!" {
    parameter allocate_type = "bool";
}

attribute ui_mode "Used to switch user interface between qt and cli" {
    parameter documentation = "Used to switch user interface between qt and cli";
    parameter allocate_type = "uint32";
}

attribute CS_mode "Used to identify client or server mode" {
    parameter documentation = "Used to identify client or server mode";
    parameter allocate_type = "uint32";
}

// USER-TODO: Add init() and post_init() methods here, if needed.
// init() will be run to set the empty state of the model, before any
// configuration or checkpointed attributes are set.  post_init() is run after
// all configuration attributes have been set.  This happens both when the
// initial configuration is set and when the configuration is loaded from a
// checkpoint.

method post_init() {
    call $ui_mode_init();
    call $init_main_board_module_ok();
    call $pci_config.update_all_mappings();   
	call $gen_normal_table($Table);
    call $init_port_queue();
    call $init_middleware_mode();
    call $init_udp_flag();
    call $init_vl_cfg();
    call $init_A664_module_ok();
}
